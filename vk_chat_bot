import pymysql
import datetime
import requests
import vk_api
from vk_api import utils
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType

token = 'tokenVKBOT'
open_weather_token = 'openweather token'


vk_session = vk_api.VkApi(token= token)
longpoll = VkBotLongPoll(vk_session, #id chat bot)
idbot = #id chat bota                                                                                    
host = 'name host mysql'
user = 'name user mysql'
port = 'port mysql'
password = 'password mysql'
db_name = 'data-base name'


def message_send(id,text):
    vk_session.method('messages.send', {'chat_id': id, 'message': text, 'random_id': 0})



for event in longpoll.listen():
    if event.type == VkBotEventType.MESSAGE_NEW:  
        if event.from_chat:
            id = event.chat_id
            peer_id = event.object.message['peer_id']
            text_user = event.object.message['text'].lower()
            id_user = event.object.message['from_id']
            try:
                dey = event.message.action['type']
                invite_id = event.message.action['member_id']
            except:
                dey = ''
                invite_id = ''
            try:
                invite_user = vk_session.method('users.get', {'user_ids': invite_id})
                invite_username = invite_user[0]['first_name'] + ' ' + invite_user[0]['last_name']
            except:
                invite_user = ''
                invite_username = ''



            if dey == 'chat_invite_user':  
                if invite_id == idbot:
                    message_send(id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –¥–æ–±–∞–≤–∏–ª–∏ –º–µ–Ω—è –≤ –±–µ—Å–µ–¥—É!\n–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—à—É –≤—ã–¥–∞—Ç—å –º–Ω–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!')
                    try:
                        connection = pymysql.connect(
                        host = host,
                        port = port,
                        user = user,
                        password = password,
                        database = db_name,
                        cursorclass= pymysql.cursors.DictCursor 
                        )
                        try:
                            with connection.cursor() as cursor:
                                create_table_query = "CREATE TABLE `settings`(name nvarchar(32)," \
                                " value nvarchar(6666));" 
                                cursor.execute(create_table_query)
                                print("Table settings created successfully")
                            with connection.cursor() as cursor:
                                create_table_query = "CREATE TABLE `banlist`(idpolzovatel int," \
                                " value nvarchar(100));" 
                                cursor.execute(create_table_query)
                                print("Table banlist created successfully")
                            with connection.cursor() as cursor:
                                create_table_query = "CREATE TABLE `nicknamelist`(idpolzovatelnick int," \
                                " value nvarchar(100));" 
                                cursor.execute(create_table_query)
                                print("Table nicknamelist created successfully")
                        except Exception as ex:
                            print('–±–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–ª –±–∞–∑—É')
                            print(ex)
                    except Exception as ex:
                        print('Connection falled')
                        print(ex)
                else:
                     message_send(id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, [id{invite_id}|{invite_username}]!')

            # kick leave user write in chat 1 enable, then who leave will be excluded      
            if text_user == '1 enable':
                try:
                    connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,cursorclass= pymysql.cursors.DictCursor)
                    try:
                        with connection.cursor() as cursor:
                            cursor.execute("SELECT * FROM `settings` WHERE name = 'kickvihod';")
                            proverka = cursor.fetchone()
                            if proverka == None:
                                insert_query_1 = "INSERT INTO `settings` (name, value) VALUES ('kickvihod', 'enable');"
                                cursor.execute(insert_query_1)
                                connection.commit()
                                message_send(id, f'‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤–∫–ª—é—á–µ–Ω–∞, —É—Å–ø–µ—à–Ω–æ!')
                            else:
                                message_send(id, f'‚ö† –ö–æ–º–∞–Ω–¥–∞ –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞.\nüë• –ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥—Ä–µ–∂–∫—É')
                    finally:
                        connection.close()
                except Exception as ex:
                    print('Connection falled')
                    print(ex)
            # the opposite "1 enable"     
            elif text_user == '1 disable':
                try:
                    connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,cursorclass= pymysql.cursors.DictCursor)
                    try:
                        with connection.cursor() as cursor:
                            insert_query_1 = "DELETE FROM `settings` WHERE name = 'kickvihod';"
                            cursor.execute(insert_query_1)
                            connection.commit()
                            message_send(id, f'‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞, —É—Å–ø–µ—à–Ω–æ!')
                    finally:
                        connection.close()
                except Exception as ex:
                    print('Connection falled')
                    print(ex)
            # check dey in chat and connect to data base. If "1 enable" then when you exit it will kick        
            if dey == 'chat_kick_user':
                try:
                    connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,cursorclass= pymysql.cursors.DictCursor)                
                    try:
                        with connection.cursor() as cursor:
                            cursor.execute("SELECT * FROM `settings` WHERE name = 'kickvihod';")
                            command_vihoda = cursor.fetchone()
                            command_vihoda_one = command_vihoda['value']
                    except:
                        None
                except:
                    None
                try:
                    if command_vihoda_one == 'enable':
                        vk_session.method('messages.removeChatUser', {'chat_id': id, 'user_id': event.message.action['member_id']})
                    else:
                        None
                except:
                    None

            # –ü—Ä–∞–≤–∏–ª–∞, rules send +–ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–≤–µ—Ç, 
            # the entered value will be entered into the database
            if text_user.find('+–ø—Ä–∞–≤–∏–ª–∞') != -1:
                try:
                    pravila = (text_user.replace('+–ø—Ä–∞–≤–∏–ª–∞ ', ''))
                except Exception as ex:
                    print(ex)
                try:
                    connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    with connection.cursor() as cursor:
                        cursor.execute("SELECT * FROM `settings` WHERE name = 'rules';")
                        pravilo_one = cursor.fetchone()
                        if pravilo_one == None:
                            insert_query_2 = f"INSERT INTO `settings` (name, value) VALUES ('rules', '{(pravila)}');"
                            cursor.execute(insert_query_2)
                            connection.commit()
                            message_send(id, f'üí¨ –ü—Ä–∞–≤–∏–ª–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.\n‚ùó –ß—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!')
                        else:
                            update_query_2 = f"UPDATE `settings` SET value = '{pravila}' WHERE name = 'rules';"
                            cursor.execute(update_query_2)
                            connection.commit()
                            message_send(id, f'üí¨ –ü—Ä–∞–≤–∏–ª–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω—ã!')
                except Exception as ex:
                    print(ex)
            # output a summary of rules from the database        
            if text_user == '/–ø—Ä–∞–≤–∏–ª–∞' or text_user == '–ø—Ä–∞–≤–∏–ª–∞':
                try:
                    connection = connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    with connection.cursor() as cursor:
                        cursor.execute("SELECT * FROM `settings` WHERE name = 'rules';")
                        send_pravila = cursor.fetchone()
                        send_pravila_one = send_pravila['value']
                        message_send(id, f'üîî –ü—Ä–∞–≤–∏–ª–∞:\n{send_pravila_one}')     
                except:
                    message_send(id, '‚ùó –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∞–≤–∏–ª–∞ –µ—â—ë –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã.\nüí¨ –ß—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–ø–∏—à–∏—Ç–µ "+–ø—Ä–∞–≤–∏–ª–∞".')
            # delete rules in database        
            if text_user == '-–ø—Ä–∞–≤–∏–ª–∞':
                try:
                    connection = connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    with connection.cursor() as cursor:
                        insert_query_2 = "DELETE FROM `settings` WHERE name = 'rules';"
                        cursor.execute(insert_query_2)
                        connection.commit()
                        message_send(id, f'‚úÖ –ü—Ä–∞–≤–∏–ª–∞ —É–¥–∞–ª–µ–Ω—ã, —É—Å–ø–µ—à–Ω–æ!')
                finally:
                    connection.close()
            # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            if text_user.find('+–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ') != -1:
                try:
                    privetstvie = (text_user.replace('+–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ', ''))
                except Exception as ex:
                    print(ex)
                try:
                    connection = connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    with connection.cursor() as cursor:
                        cursor.execute("SELECT * FROM `settings` WHERE name = 'privetstvie';")
                        privetstvie_one = cursor.fetchone()
                        if privetstvie_one == None:
                            insert_query_3 = f"INSERT INTO `settings` (name, value) VALUES ('privetstvie', '{(privetstvie)}');"
                            cursor.execute(insert_query_3)
                            connection.commit()
                            message_send(id, f'üí¨ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.\n‚ùó –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!')
                        else:
                            update_query_3 = f"UPDATE `settings` SET value = '{privetstvie}' WHERE name = 'privetstvie';"
                            cursor.execute(update_query_3)
                            connection.commit()
                            message_send(id, f'üí¨ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω–æ!')
                finally:
                    connection.close()
            if text_user == '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' or text_user == '/–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ':
                try:
                    connection = connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    with connection.cursor() as cursor:
                        cursor.execute("SELECT * FROM `settings` WHERE name = 'privetstvie';")
                        send_privetstvie = cursor.fetchone()
                        send_privetstvie_one = send_pravila['value']
                        message_send(id, f'üîî –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:\n{send_pravila_one}')     
                except:
                    message_send(id, '‚ùó –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ.\nüí¨ –ß—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–ø–∏—à–∏—Ç–µ "+–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ".')
            if text_user == '-–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ':
                try:
                    connection = connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    with connection.cursor() as cursor:
                        insert_query_3 = "DELETE FROM `settings` WHERE name = 'privetstvie';"
                        cursor.execute(insert_query_3)
                        connection.commit()
                        message_send(id, f'‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É–¥–∞–ª–µ–Ω–æ, —É—Å–ø–µ—à–Ω–æ!')
                finally:
                    connection.close()
            # nick name
            if text_user.find('+–Ω–∏–∫') != -1:
                iduser = event.object.message['from_id']
                try:
                    nickname = (text_user.replace('+–Ω–∏–∫ ', ''))
                except Exception as ex:
                    print(ex)
                try:
                    connection = connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    with connection.cursor() as cursor:
                        cursor.execute(f"SELECT * FROM `nicknamelist` WHERE idpolzovatelnick = '{iduser}';")
                        nicknameone = cursor.fetchone()
                        if nicknameone == None:
                            insert_query_4 = f"INSERT INTO `nicknamelist` (idpolzovatelnick, value) VALUES ('{(iduser)}', '{(nickname)}');"
                            cursor.execute(insert_query_4)
                            connection.commit()
                            message_send(id, f'üî± –ù–∏–∫ [id{iduser}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')
                        else:
                            update_query_3 = f"UPDATE `nicknamelist` SET value = '{nickname}' WHERE idpolzovatelnick = '{(iduser)}';"
                            cursor.execute(update_query_3)
                            connection.commit()
                            message_send(id, f'üî± –ù–∏–∫ [id{iduser}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ –Ω–æ–≤—ã–π.')      
                finally:
                    connection.close()
            if text_user == '-–Ω–∏–∫':
                iduser = event.object.message['from_id']
                try:
                    connection = connection = pymysql.connect(host = host,port = port,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    with connection.cursor() as cursor:
                        delete_query = f"DELETE FROM `nicknamelist` WHERE idpolzovatelnick = '{(iduser)}';"
                        cursor.execute(delete_query)
                        connection.commit()
                        message_send(id, f'üî± [id{iduser}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] —É–¥–∞–ª—ë–Ω –Ω–∏–∫-–Ω–µ–π–º.')
                finally:
                    connection.close()
            #weather
            if text_user.find('/–ø–æ–≥–æ–¥–∞') != -1:
                try:
                    pogoda = (text_user.replace('/–ø–æ–≥–æ–¥–∞ ', ''))
                except:
                    print('–≤–∞—Ä–Ω–∏–≥–Ω')
                city = pogoda
                def get_weather(city, open_weather_token):
                    try:
                        r = requests.get(
                        f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={open_weather_token}&units=metric"
                        )
                        data = r.json()
                        city = data["name"]
                        temp = data["main"]["temp"]
                        humidity = data["main"]["humidity"]
                        wind = data["wind"]["speed"]
                        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
                        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
                        message_send(id, f'üåè–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\nüí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind} –º/—Å\nüåï–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\nüåë–ó–∞—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}')
                    except:
                        message_send(id,"–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É")
                def pgd():
                    get_weather(city,open_weather_token)
                if pgd == pgd:
                    pgd()
            # Ban and kick
            if text_user == '–±–∞–Ω' or text_user == '/–±–∞–Ω' or text_user == 'ban' or text_user == '/ban':
                reply_message = event.message.reply_message['from_id']
                banned_user = vk_session.method('users.get', {'user_ids': reply_message})
                banned_user_name = banned_user[0]['first_name'] + ' ' + banned_user[0]['last_name']
                try:
                    connection = connection = pymysql.connect(host = host,port = 3306,user = user,password = password,database = db_name,charset='utf8',cursorclass= pymysql.cursors.DictCursor)
                    print('Connection succefuly..')
                    print('#'*20)
                    try:
                        with connection.cursor() as cursor:
                            insert_query_1 = f"INSERT INTO `banlist` (idpolzovatel, value) VALUES ('{(reply_message)}', 'banned');"
                            cursor.execute(insert_query_1)
                            connection.commit()
                            message_send(id, f'‚õî [id{reply_message}|{banned_user_name}], –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω!')
                            vk_session.method('messages.removeChatUser', {'chat_id': id, 'member_id': event.message.reply_message['from_id']})
                    except:
                        None
                except Exception as ex:
                    print(ex)
            if text_user == '–∫–∏–∫' or text_user == '/–∫–∏–∫' or text_user == 'kick' or text_user == '/kick':
                reply_message = event.message.reply_message['from_id']
                banned_user = vk_session.method('users.get', {'user_ids': reply_message})
                banned_user_name = banned_user[0]['first_name'] + ' ' + banned_user[0]['last_name']
                try:
                    message_send(id, f'‚õî [id{reply_message}|{banned_user_name}], –±—ã–ª –∫–∏–∫–Ω—É—Ç!')   
                    vk_session.method('messages.removeChatUser', {'chat_id': id, 'member_id': event.message.reply_message['from_id']})
                except:
                    None
            #############################################
            if text_user == '–±–æ—Ç':
                message_send(id, f'üëΩ–í—Å—ë —Ö–æ—Ä–æ—à–æ –≤—Ä–æ–¥–µ!')
            #############################################
            # the code is publicly available if someone needs it, take it away, but it's not perfect, improvements are needed <3
